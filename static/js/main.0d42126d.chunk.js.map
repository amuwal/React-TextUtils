{"version":3,"sources":["components/DarkModeButton.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["DarkModeButton","props","_useState","useState","mode","_useState2","Object","slicedToArray","theme","setTheme","returnOpposite","react_default","a","createElement","type","className","onClick","op","nav","document","getElementById","classList","remove","concat","add","textArea","root","main","heading","summary","_unused","console","log","Navbar","id","react_router_dom","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Textform","text","setText","_useState3","_useState4","copyStatus","setCopyStatus","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","navigator","clipboard","writeText","currentTarget","replace","trim","split","length","App","Fragment","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0d42126d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function DarkModeButton(props) {\r\n    const [theme, setTheme] = useState(props.mode)\r\n\r\n    const returnOpposite = (mode) => {\r\n\r\n        if(mode === \"light\"){\r\n            return \"dark\"\r\n        }\r\n        else{\r\n            return \"light\"\r\n        }\r\n    }\r\n    function handleDark() {\r\n        const mode = theme\r\n        const op = returnOpposite(mode)\r\n        let nav = document.getElementById(\"nav\")\r\n        \r\n        nav.classList.remove(`navbar-${op}`, `bg-${op}`)\r\n        nav.classList.add(`navbar-${mode}`, `bg-${mode}`)\r\n\r\n        try{\r\n        let textArea = document.getElementById(\"myBox\")\r\n        let root = document.getElementById(\"root\")\r\n        let main = document.getElementById(\"main\")\r\n        let heading = document.getElementById(\"heading\")\r\n        let summary = document.getElementById(\"summary\")\r\n\r\n        textArea.classList.remove(`bg-${op}`, `border-${mode}`, `text-${mode}`)\r\n        textArea.classList.add(`border-${op}`, `text-${op}`, `bg-${mode}`)\r\n\r\n        root.classList.remove(`bg-${op}`)\r\n        root.classList.add(`bg-${mode}`)\r\n        \r\n        main.classList.remove(`bg-${op}`, `border-${mode}`)\r\n        main.classList.add(`border-${op}`)\r\n\r\n        heading.classList.remove(`text-${mode}`)\r\n        heading.classList.add(`text-${op}`)\r\n\r\n        summary.classList.remove(`text-${mode}`)\r\n        summary.classList.add(`text-${op}`)\r\n        }\r\n        catch{\r\n            console.log(\"okay\")\r\n        }\r\n\r\n        setTheme(op)\r\n    }\r\n  return (\r\n    <button type=\"button\" className=\"btn btn-dark border border-warning \" onClick={handleDark}>Enable {theme} mode</button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport DarkModeButton from './DarkModeButton';\r\nexport default function Navbar() {\r\n  return (\r\n  <nav id=\"nav\" className=\"navbar navbar-expand-lg navbar-dark bg-dark border-bottom mb-4\">\r\n    <Link className=\"navbar-brand\" to=\"/\">TextUtils</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item active\">\r\n            <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        </ul>\r\n        <DarkModeButton mode=\"light\"></DarkModeButton>\r\n        \r\n    </div>\r\n   </nav>\r\n    \r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Textform(props) {\r\n    \r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    \r\n    const handleLowClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    \r\n    const handleClear = () => {\r\n        let newText = \"\";\r\n        setText(newText)\r\n    }\r\n    \r\n    const handleCopy = event => {\r\n        navigator.clipboard.writeText(text)\r\n        event.currentTarget.classList.remove('btn-primary');\r\n        event.currentTarget.classList.add('btn-dark');\r\n        setCopyStatus(\"Copied!!\")\r\n        // alert(\"Copied Successfully\")\r\n\r\n    }\r\n    \r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    \r\n    const [text, setText] = useState('');\r\n    const [copyStatus, setCopyStatus] = useState('Copy To Clipboard');\r\n    // setText(\"Your Text here\")\r\n  return (\r\n    <div className=\"container  border border-light bg-dark\" id=\"main\">\r\n     <h1 className='text-light' id=\"heading\">{props.heading}</h1>\r\n     {/* <label htmlFor=\"Text\" className=\"form-label\">Enter your text below:</label> */}\r\n     <textarea className=\"form-control bg-dark text-light border border-light\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n     <button className=\"my-3 mx-2 btn btn-dark border border-light\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n     <button className=\"my-3 mx-2 btn btn-dark border border-light\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n     <button className=\"my-3 mx-2 btn btn-dark border border-light\" onClick={handleClear}>Clear Area</button>\r\n     <button className=\"my-3 mx-2 btn btn-dark border border-light\" onClick={handleCopy}>{copyStatus}</button>\r\n     <h1 className='text-warning'>Your Text Summary:</h1>\r\n     <p id=\"summary\" className='text-light'>{text.replace(/\\s{2,}/g, ' ').trim().split(\" \").length} words and {text.replace(/\\s{2,}/g, ' ').trim().length} characters</p>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport DarkModeButton from './components/DarkModeButton';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n  } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n    <Navbar/>\n    <Textform heading=\"Enter Your text below\"/>\n    {/* <Router>\n        <Navbar/>\n        <Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\" element={<Textform heading=\"Enter Your text below\"/>}/>\n        </Routes>\n    </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import {\n//     BrowserRouter\n//   } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//       <BrowserRouter>\n//         <App />\n//       </BrowserRouter>\n//     </React.StrictMode>,\n//     document.getElementById('root')\n//   );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}