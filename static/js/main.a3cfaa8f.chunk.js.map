{"version":3,"sources":["components/About.js","components/DarkModeButton.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","_useState","useState","_useState2","Object","slicedToArray","darkModeStatus","setDarkModeStatus","_useState3","_useState4","toggleDark","setDarkToLight","_useState5","_useState6","toggleLight","setLightToDark","react_default","a","createElement","className","concat","href","data-src","alt","onClick","event","DarkModeButton","mode","theme","setTheme","returnOpposite","type","op","nav","document","getElementById","classList","remove","add","textArea","root","main","heading","summary","_unused","console","log","Navbar","id","react_router_dom","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Textform","text","setText","copyStatus","setCopyStatus","value","onChange","target","rows","newText","toUpperCase","toLowerCase","navigator","clipboard","writeText","currentTarget","replace","trim","split","length","App","Fragment","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a3cfaa8f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n    const [darkModeStatus, setDarkModeStatus] = useState('light');\r\n    const [toggleDark, setDarkToLight] = useState('dark');\r\n    const [toggleLight, setLightToDark] = useState('light');\r\n\r\n    const handleDarkMode = event => {\r\n        if (darkModeStatus === \"light\") {\r\n            setDarkToLight(\"light\")\r\n            setLightToDark(\"dark\")\r\n            setDarkModeStatus(\"dark\")\r\n        }\r\n        else if (darkModeStatus === \"dark\") {\r\n            setDarkToLight(\"dark\")\r\n            setLightToDark(\"light\")\r\n            setDarkModeStatus(\"light\")\r\n        }\r\n    }\r\n\r\n  return (\r\n<div className={`container bg-${toggleDark} py-2 my-3`}>\r\n    <div className={`container my-2 bg-${toggleDark}`}>\r\n      <div className={`jumbotron p-md-5 text-light rounded bg-${toggleDark} border border-${toggleLight}`}>\r\n        <div className=\"col-md-6 px-0 my-3\">\r\n          <h1 className={`display-4 font-italic text-${toggleLight}`}>Title of a longer featured blog post</h1>\r\n          <p className={`lead my-3 text-${toggleLight}`}>Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.</p>\r\n          <p className=\"lead mb-0\"><a href=\"/\" className={`text-${toggleLight} font-weight-bold`}>Continue reading...</a></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"row mb-2\">\r\n        <div className=\"col-md-6\">\r\n          <div className={`card flex-md-row mb-4 box-shadow h-md-250 border border-${toggleLight} `}>\r\n            <div className={`bg-${toggleDark} card-body d-flex flex-column align-items-start`}>\r\n              <strong className=\"d-inline-block mb-2 text-warning\">World</strong>\r\n              <h3 className=\"mb-0\">\r\n                <a className={`text-${toggleLight}`} href=\"/\">Featured post</a>\r\n              </h3>\r\n              <div className=\"mb-1 text-muted\">Nov 12</div>\r\n              <p className={`text-${toggleLight} card-text mb-auto`}>This is a wider card with supporting text below as a natural lead-in to additional content.</p>\r\n              <a className='text-secondary' href=\"/\">Continue reading</a>\r\n            </div>\r\n            <img className=\"card-img-right flex-auto d-none d-md-block\" data-src=\"holder.js/200x250?theme=thumb\" alt=''/>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6 \">\r\n          <div className={`bg-${toggleDark} card flex-md-row mb-4 box-shadow h-md-250 border border-${toggleLight}`}>\r\n            <div className=\"card-body d-flex flex-column align-items-start\">\r\n              <strong className=\"d-inline-block mb-2 text-warning\">Design</strong>\r\n              <h3 className=\"mb-0\">\r\n                <a className={`text-${toggleLight}`} href=\"/\">Post title</a>\r\n              </h3>\r\n              <div className=\"mb-1 text-muted\">Nov 11</div>\r\n              <p className={`card-text mb-auto text-${toggleLight}`}>This is a wider card with supporting text below as a natural lead-in to additional content.</p>\r\n              <a className='text-secondary' href=\"/\">Continue reading</a>\r\n            </div>\r\n            <img className=\"card-img-right flex-auto d-none d-md-block\" data-src=\"holder.js/200x250?theme=thumb\" alt=''/>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <button className=\"my-3 mx-2 btn btn-primary\" onClick={handleDarkMode}>Enable {darkModeStatus} mode</button>\r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function DarkModeButton(props) {\r\n    const [theme, setTheme] = useState(props.mode)\r\n\r\n    const returnOpposite = (mode) => {\r\n\r\n        if(mode === \"light\"){\r\n            return \"dark\"\r\n        }\r\n        else{\r\n            return \"light\"\r\n        }\r\n    }\r\n    function handleDark() {\r\n        const mode = theme\r\n        const op = returnOpposite(mode)\r\n        let nav = document.getElementById(\"nav\")\r\n        \r\n        nav.classList.remove(`navbar-${op}`, `bg-${op}`)\r\n        nav.classList.add(`navbar-${mode}`, `bg-${mode}`)\r\n\r\n        try{\r\n        let textArea = document.getElementById(\"myBox\")\r\n        let root = document.getElementById(\"root\")\r\n        let main = document.getElementById(\"main\")\r\n        let heading = document.getElementById(\"heading\")\r\n        let summary = document.getElementById(\"summary\")\r\n\r\n        textArea.classList.remove(`bg-${op}`, `border-${mode}`, `text-${mode}`)\r\n        textArea.classList.add(`border-${op}`, `text-${op}`, `bg-${mode}`)\r\n\r\n        root.classList.remove(`bg-${op}`)\r\n        root.classList.add(`bg-${mode}`)\r\n        \r\n        main.classList.remove(`bg-${op}`, `border-${mode}`)\r\n        main.classList.add(`border-${op}`)\r\n\r\n        heading.classList.remove(`text-${mode}`)\r\n        heading.classList.add(`text-${op}`)\r\n\r\n        summary.classList.remove(`text-${mode}`)\r\n        summary.classList.add(`text-${op}`)\r\n        }\r\n        catch{\r\n            console.log(\"okay\")\r\n        }\r\n\r\n        setTheme(op)\r\n    }\r\n  return (\r\n    <button type=\"button\" className=\"btn btn-dark border border-warning \" onClick={handleDark}>Enable {theme} mode</button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport DarkModeButton from './DarkModeButton';\r\nexport default function Navbar() {\r\n  return (\r\n  <nav id=\"nav\" className=\"navbar navbar-expand-lg navbar-dark bg-dark border-bottom mb-4\">\r\n    <Link className=\"navbar-brand\" to=\"/\">TextUtils</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item active\">\r\n            <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        </ul>\r\n        <DarkModeButton mode=\"light\"></DarkModeButton>\r\n        \r\n    </div>\r\n   </nav>\r\n    \r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Textform(props) {\r\n    \r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    \r\n    const handleLowClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    \r\n    const handleClear = () => {\r\n        let newText = \"\";\r\n        setText(newText)\r\n    }\r\n    \r\n    const handleCopy = event => {\r\n        navigator.clipboard.writeText(text)\r\n        event.currentTarget.classList.remove('btn-primary');\r\n        event.currentTarget.classList.add('btn-dark');\r\n        setCopyStatus(\"Copied!!\")\r\n        // alert(\"Copied Successfully\")\r\n\r\n    }\r\n    \r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    \r\n    const [text, setText] = useState('');\r\n    const [copyStatus, setCopyStatus] = useState('Copy To Clipboard');\r\n    // setText(\"Your Text here\")\r\n  return (\r\n    <div className=\"container  border border-light bg-dark\" id=\"main\">\r\n     <h1 className='text-light' id=\"heading\">{props.heading}</h1>\r\n     {/* <label htmlFor=\"Text\" className=\"form-label\">Enter your text below:</label> */}\r\n     <textarea className=\"form-control bg-dark text-light border border-light\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n     <button className=\"my-3 mx-2 btn btn-dark border border-light\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n     <button className=\"my-3 mx-2 btn btn-dark border border-light\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n     <button className=\"my-3 mx-2 btn btn-dark border border-light\" onClick={handleClear}>Clear Area</button>\r\n     <button className=\"my-3 mx-2 btn btn-dark border border-light\" onClick={handleCopy}>{copyStatus}</button>\r\n     <h1 className='text-warning'>Your Text Summary:</h1>\r\n     <p id=\"summary\" className='text-light'>{text.replace(/\\s{2,}/g, ' ').trim().split(\" \").length} words and {text.replace(/\\s{2,}/g, ' ').trim().length} characters</p>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport DarkModeButton from './components/DarkModeButton';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n  } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n    <Router>\n        <Navbar/>\n        <Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\" element={<Textform heading=\"Enter Your text below\"/>}/>\n        </Routes>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}